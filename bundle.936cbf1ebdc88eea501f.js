(() => { "use strict"; var e = { 93: (e, t, n) => { n.d(t, { A: () => r }); var o = n(601), a = n.n(o), i = n(314), s = n.n(i)()(a()); s.push([e.id, '*{font-family:"Roc Grotesk W05 Wide";padding:0;margin:0;list-style:none;box-sizing:border-box;border:none}.back-button{font-family:"Roc Grotesk W05 Wide";font-size:16px;color:#2c2e35;border:none;border-radius:20px;background-color:#ffc800;height:30px;width:100%;position:relative;overflow:hidden;z-index:1;transition:box-shadow .5s ease}.back-button:hover{cursor:pointer;box-shadow:3px 3px 3px 0px #999}.back-button::before{content:"";position:absolute;bottom:-100%;left:0;width:100%;height:100%;background-color:#fa0;z-index:-1;transition:bottom .5s ease}.back-button:hover::before{bottom:0}.disabled{opacity:.5;pointer-events:none}', ""]); const r = s.toString() }, 785: (e, t, n) => { n.d(t, { A: () => r }); var o = n(601), a = n.n(o), i = n(314), s = n.n(i)()(a()); s.push([e.id, '*{font-family:"Roc Grotesk W05 Wide";padding:0;margin:0;list-style:none;box-sizing:border-box}button{background-color:none;border:none}.close-button{position:absolute;top:-25px;right:0;height:35px;background-color:rgba(0,0,0,0)}.close-button .close-icon:hover{fill:#fa0;cursor:pointer}.close-button-container{position:relative;width:90%;height:40px}@media(min-width: 420px){.close-button-container{width:375px}}.open-button{border:none;background-color:rgba(0,0,0,0);padding:0}.open-button>.language-flag{width:40px;height:40px;border-radius:100%}.open-button>.language-flag:hover{cursor:pointer;outline:3px solid #fa0}.dropdown-container{position:relative}.dropdown-menu{position:fixed;top:0;left:0;transform:translateY(100%);opacity:0;transition:transform .5s ease,opacity .5s ease;display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:100%;background-color:rgba(191,192,191,.7)}.dropdown-menu.show{transform:translateY(0);opacity:1;z-index:1000}.language-option{width:90%;border-radius:20px;margin-bottom:10px}@media(min-width: 420px){.language-option{width:375px}}.language-button{display:flex;align-items:center;width:100%;height:45px;border-radius:20px;color:#2c2e35;font-size:16px}.language-button:hover{background-color:#fa0;cursor:pointer}.language-button .language-flag{order:1;width:60px;height:100%;border-radius:20px 0 0 20px}.language-button .language-name{display:flex;align-items:center;order:2;text-transform:uppercase;letter-spacing:1.5px;font-weight:400;margin-left:25%}', ""]); const r = s.toString() }, 153: (e, t, n) => { n.d(t, { A: () => r }); var o = n(601), a = n.n(o), i = n(314), s = n.n(i)()(a()); s.push([e.id, '*{font-family:"Roc Grotesk W05 Wide";padding:0;margin:0;list-style:none;box-sizing:border-box;border:none}button{background-color:rgba(0,0,0,0)}button:hover{cursor:pointer}.button-container{width:100%;display:flex;justify-content:space-around}.next-button svg,.previous-button svg{fill:#c6c6d1}.next-button:hover svg,.previous-button:hover svg{fill:#ffc800}.next-button,.previous-button{background-color:rgba(0,0,0,0)}@media(min-width: 768px){.next-button,.previous-button{display:none}}.indicator{height:5px;width:20%;border-radius:20px;background-color:#c6c6d1}@media(min-width: 768px){.indicator{display:none}}@media(min-width: 420px){.indicator-4{display:none}}@media(min-width: 620px){.indicator-3{display:none}}.indicator-container{width:50%;display:flex;justify-content:space-around;align-items:center}.cards{display:grid;grid-auto-flow:column;grid-auto-columns:50%;overflow-x:auto;scroll-snap-type:inline mandatory;scrollbar-width:none}@media(min-width: 420px){.cards{grid-auto-columns:33.3%}}@media(min-width: 620px){.cards{grid-auto-columns:25%}}@media(min-width: 768px){.cards{grid-auto-columns:20%}}@media(min-width: 1024px){.cards{width:924px}}.card{width:100%;aspect-ratio:2/3}.card-button{width:100%;padding:7.5% 5%;display:flex;scroll-snap-align:start;border:3px solid rgba(0,0,0,0);border-radius:7.5%}.card-button:hover{border:3px solid #ec318f}.card-slider{height:100%;display:flex;flex-direction:column;align-items:center;justify-content:space-around}.card-title{font-weight:100;font-size:18px;margin:20px 0;text-align:center}@media(min-width: 420px){.card-title{font-size:24px}}.hidden{visibility:hidden;pointer-events:none}.displaynone{display:none}.active{background-color:#ffc800}@keyframes slide-in{to{opacity:1;transform:translateX(0)}}@keyframes slide-out{from{opacity:1;transform:translateX(0)}to{opacity:0;transform:translateX(100%)}}.card-button{opacity:0;transform:translateX(-100%);animation:slide-in .75s ease-out forwards}.card-button:nth-child(1){animation-delay:.4s}.card-button:nth-child(2){animation-delay:.6s}.card-button:nth-child(3){animation-delay:.8s}.card-button:nth-child(4){animation-delay:1s}.card-button:nth-child(5){animation-delay:1.2s}.card-title{opacity:0;transform:translateX(-100%);animation:slide-in 1.7s ease-out forwards}.slide-out{animation:slide-out .5s ease-in forwards}', ""]); const r = s.toString() }, 41: (e, t, n) => { n.d(t, { A: () => r }); var o = n(601), a = n.n(o), i = n(314), s = n.n(i)()(a()); s.push([e.id, '*{font-family:"Roc Grotesk W05 Wide";padding:0;margin:0;list-style:none;box-sizing:border-box;border:none}.name-input{height:40px;width:100%;border-radius:20px;margin-bottom:10px;padding:0 15px;border:2px solid #fa0;background-color:rgba(255,200,0,.4);color:#2c2e35;font-size:20px;text-align:center}@media(min-width: 1024px){.name-input{font-size:24px}}.name-input:focus{outline:none}.name-input::placeholder{color:#2c2e35;font-weight:100}.name-input-container{display:flex;flex-direction:column;align-items:center;width:80%;color:#2c2e35}.name-input-title{font-size:20px;font-weight:600;text-align:center;margin-bottom:20px}@media(min-width: 1024px){.name-input-title{font-size:24px}}.name-input-confirm{height:30px;border-radius:20px;width:100%;font-size:16px;color:#2c2e35;background-color:#ffc800;position:relative;overflow:hidden;z-index:1;transition:box-shadow .5s ease}.name-input-confirm:hover{box-shadow:3px 3px 3px 0px #999;cursor:pointer}.name-input-confirm::before{content:"";position:absolute;bottom:-100%;left:0;width:100%;height:100%;background-color:#fa0;z-index:-1;transition:bottom .5s ease}.name-input-confirm:hover::before{bottom:0}.input-wrapper{position:relative;width:300px;display:flex;flex-direction:column}@media(min-width: 620px){.input-wrapper{width:450px}}.button-container{display:flex;justify-content:space-between}dt-back-button{width:100%;margin-right:5px}.warning{border:2px solid red}.warning-icon{position:absolute;top:8px;left:50px;fill:red;height:20px}.hidden{display:none}@keyframes slide-in{to{opacity:1;transform:translateX(0)}}@keyframes slide-out{from{opacity:1;transform:translateX(0)}to{opacity:0;transform:translateX(100%)}}.name-input-container{opacity:0;transform:translateX(-100%);animation:slide-in .75s ease-out forwards}.slide-out{animation:slide-out .5s ease-in forwards}', ""]); const r = s.toString() }, 421: (e, t, n) => { n.d(t, { A: () => r }); var o = n(601), a = n.n(o), i = n(314), s = n.n(i)()(a()); s.push([e.id, '*{font-family:"Roc Grotesk W05 Wide";padding:0;margin:0;list-style:none;box-sizing:border-box;border:none}.score-display-wrapper{display:flex;flex-direction:column;justify-content:center;position:relative;z-index:500}.players-wrapper{display:flex;justify-content:center;flex-wrap:wrap;margin-bottom:20px;column-gap:5px}@media(min-width: 620px){.players-wrapper{column-gap:10px}}@media(min-width: 768px){.players-wrapper{column-gap:15px}}@media(min-width: 1024px){.players-wrapper{width:930px;margin-bottom:50px;align-self:center}}.player-container{flex:1 1 calc(50% - 10px);margin-bottom:10px;max-width:calc(50% - 10px)}@media(min-width: 620px){.player-container{margin-bottom:20px;flex:1 1 calc(33.3% - 10px);max-width:calc(33.3% - 10px)}}@media(min-width: 1024px){.player-container{max-width:300px}}.name,.score,.score-input{border-radius:20px;height:40px;width:100%;outline:none;display:flex;justify-content:center;align-items:center;text-align:center;font-size:20px}.name[type=number],.score[type=number],.score-input[type=number]{-moz-appearance:textfield}.name{background-color:#ec318f;font-weight:600;margin-bottom:5px}.score{border:3px solid #1ebff1;font-weight:100}.score-input{margin-bottom:15px;font-weight:400;background-color:rgba(255,200,0,.4);border:3px solid #fa0}.score-input::placeholder{color:#2c2e35;font-size:24px;font-weight:100}.score-input-container{display:flex;flex-direction:column}@media(min-width: 620px){.score-input-container{width:300px;margin:0 auto}}@media(min-width: 1024px){.score-input-container{width:450px}}.score-input-title{text-align:center;margin-bottom:5px}.input-wrapper{position:relative}.button-container{display:flex;justify-content:space-between;flex-wrap:wrap}dt-back-button{width:49%}.add-button{background-color:#ffc800;border-radius:20px;height:40px;width:100%;margin-top:10px;font-family:"Roc Grotesk W05 Wide";font-size:16px;color:#2c2e35;position:relative;overflow:hidden;z-index:1;transition:box-shadow .5s ease}.add-button:hover{cursor:pointer;box-shadow:3px 3px 3px 0px #999}.add-button::before{cursor:pointer;content:"";position:absolute;bottom:-100%;left:0;width:100%;height:100%;background-color:#fa0;z-index:-1;transition:bottom .5s ease}.add-button:hover::before{bottom:0}.new-game-button{background-color:#ffc800;border-radius:20px;height:30px;width:49%;font-family:"Roc Grotesk W05 Wide";font-size:16px;color:#2c2e35;position:relative;overflow:hidden;z-index:1;transition:box-shadow .5s ease}.new-game-button:hover{cursor:pointer;box-shadow:3px 3px 3px 0px #999}.new-game-button::before{content:"";position:absolute;bottom:-100%;left:0;width:100%;height:100%;background-color:#fa0;z-index:-1;transition:bottom .5s ease}.new-game-button:hover::before{bottom:0}.message-dialog-open{top:50%;left:50%;transform:translate(-50%, -50%);display:flex;flex-direction:column;align-items:center;justify-content:space-evenly;width:95%;max-width:100vw;height:350px;padding:15px 10px;font-size:24px;border-radius:10px}@media(min-width: 620px){.message-dialog-open{width:560px}}.message-dialog-text{text-align:center;word-wrap:break-word;word-break:break-word;white-space:normal;width:75%}.message-dialog-button{height:40px;width:100%;border-radius:20px;background-color:#ffc800;font-size:16px;color:#2c2e35;border:none;outline:none;position:relative;overflow:hidden;z-index:2;transition:box-shadow .5s ease}@media(min-width: 420px){.message-dialog-button{width:380px}}.message-dialog-button:hover{cursor:pointer;box-shadow:3px 3px 3px 0px #999}.message-dialog-button::before{content:"";position:absolute;bottom:-100%;left:0;width:100%;height:100%;background-color:#fa0;z-index:-1;transition:bottom .5s ease}.message-dialog-button:hover::before{bottom:0}.new-game-dialog-open{display:flex;flex-direction:column;justify-content:space-evenly;top:50%;left:50%;transform:translate(-50%, -50%);width:95%;max-width:100vw;height:300px;border-radius:10px;padding:35px 10px 15px 10px}@media(min-width: 620px){.new-game-dialog-open{width:560px}}.new-game-dialog-text{text-align:center;font-size:24px;padding:15px 35px}.new-game-dialog-close-button{position:absolute;right:5px;top:5px;background-color:rgba(0,0,0,0);height:35px;width:35px}.new-game-dialog-close-button svg:hover{fill:#ffc800;cursor:pointer}.new-game-dialog-button-container{display:flex;justify-content:space-between}.new-game-dialog-yes-button,.new-game-dialog-no-button{width:49%;height:40px;border-radius:20px;background-color:#ffc800;color:#2c2e35;font-size:16px;position:relative;overflow:hidden;z-index:1;transition:box-shadow .5s ease}.new-game-dialog-yes-button:hover,.new-game-dialog-no-button:hover{box-shadow:3px 3px 3px 0px #999;cursor:pointer}.new-game-dialog-yes-button::before,.new-game-dialog-no-button::before{content:"";position:absolute;bottom:-100%;left:0;width:100%;height:100%;background-color:#fa0;z-index:-1;transition:bottom .5s ease}.new-game-dialog-yes-button:hover::before,.new-game-dialog-no-button:hover::before{bottom:0}dialog[open]::backdrop{background-color:rgba(191,192,191,.7)}canvas{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1}.warning{border:2px solid red}.warning-icon{position:absolute;top:9px;left:50px;fill:red;height:20px}.hidden{display:none}.eliminated{opacity:.5}.disabled{opacity:.4;pointer-events:none}@keyframes slide-by{0%{opacity:0;transform:translateX(-100%)}50%{opacity:1;transform:translateX(0)}100%{opacity:0;transform:translateX(100%)}}@keyframes slide-in{to{opacity:1;transform:translateX(0)}}@keyframes slide-out{from{opacity:1;transform:translateX(0)}to{opacity:0;transform:translateX(100%)}}.score-display-wrapper{opacity:0;transform:translateX(-100%);animation:slide-in .75s ease-out forwards}.slide-out{animation:slide-out .5s ease-in forwards}', ""]); const r = s.toString() }, 314: e => { e.exports = function (e) { var t = []; return t.toString = function () { return this.map((function (t) { var n = "", o = void 0 !== t[5]; return t[4] && (n += "@supports (".concat(t[4], ") {")), t[2] && (n += "@media ".concat(t[2], " {")), o && (n += "@layer".concat(t[5].length > 0 ? " ".concat(t[5]) : "", " {")), n += e(t), o && (n += "}"), t[2] && (n += "}"), t[4] && (n += "}"), n })).join("") }, t.i = function (e, n, o, a, i) { "string" == typeof e && (e = [[null, e, void 0]]); var s = {}; if (o) for (var r = 0; r < this.length; r++) { var l = this[r][0]; null != l && (s[l] = !0) } for (var c = 0; c < e.length; c++) { var d = [].concat(e[c]); o && s[d[0]] || (void 0 !== i && (void 0 === d[5] || (d[1] = "@layer".concat(d[5].length > 0 ? " ".concat(d[5]) : "", " {").concat(d[1], "}")), d[5] = i), n && (d[2] ? (d[1] = "@media ".concat(d[2], " {").concat(d[1], "}"), d[2] = n) : d[2] = n), a && (d[4] ? (d[1] = "@supports (".concat(d[4], ") {").concat(d[1], "}"), d[4] = a) : d[4] = "".concat(a)), t.push(d)) } }, t } }, 601: e => { e.exports = function (e) { return e[1] } } }, t = {}; function n(o) { var a = t[o]; if (void 0 !== a) return a.exports; var i = t[o] = { id: o, exports: {} }; return e[o](i, i.exports, n), i.exports } n.n = e => { var t = e && e.__esModule ? () => e.default : () => e; return n.d(t, { a: t }), t }, n.d = (e, t) => { for (var o in t) n.o(t, o) && !n.o(e, o) && Object.defineProperty(e, o, { enumerable: !0, get: t[o] }) }, n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t); var o = n(93); const a = { dutch: { name: "Nederlands", flag: "https://flagcdn.com/h40/nl.png", title: "SCOREBORD", player_count: "SELECTEER HET AANTAL SPELERS:", name_input: "Voer de naam in van:", placeholder: "Speler", score_input: "Voer score in voor:", score_submit: "Voeg toe", step_back: "Terug", elimination_message: "Helaas, is af en ligt uit het spel!", winner_message: "Gefeliciteerd! heeft het spel gewonnen!", score_halving_message: "Goed gedaan! gaat terug naar punten", new_game_button: "Nieuw spel", new_game_text: "Wil je een nieuw spel starten met dezelfde spelers?", new_game_confirm: "Ja", new_game_cancel: "Nee" }, german: { name: "Deutsch", flag: "https://flagcdn.com/h40/de.png", title: "ANZEIGETAFEL", player_count: "WÄHLEN SIE DIE ANZAHL DER SPIELER:", name_input: "Geben Sie den Namen ein von:", placeholder: "Spieler", score_input: "Geben Sie die Punktzahl ein für:", score_submit: "Hinzufügen", step_back: "Zurück", elimination_message: "Leider, ist ausgeschieden und aus dem Spiel!", winner_message: "Herzlichen Glückwunsch! hat das Spiel gewonnen!", score_halving_message: "Gut gemacht! Geht zurück zu den Punkten", new_game_button: "Neues spiel", new_game_text: "Möchtest du ein neues Spiel mit den gleichen Spielern starten?", new_game_confirm: "Ja", new_game_cancel: "Nein" }, spanish: { name: "Español", flag: "https://flagcdn.com/h40/es.png", title: "TABLERO DE PUNTUACIÓN", player_count: "SELECCIONE LA CANTIDAD DE JUGADORES:", name_input: "Ingrese el nombre de:", placeholder: "Jugador", score_input: "Ingrese la puntuación para:", score_submit: "Agregar", step_back: "Atrás", elimination_message: "Desafortunadamente, está fuera y eliminado del juego!", winner_message: "¡Felicidades! ha ganado el juego!", score_halving_message: "¡Bien hecho! Vuelve a los puntos", new_game_button: "Nuevo juego", new_game_text: "¿Quieres empezar un nuevo juego con los mismos jugadores?", new_game_confirm: "Sí", new_game_cancel: "No" }, english: { name: "English", flag: "https://flagcdn.com/h40/us.png", title: "SCOREBOARD", player_count: "SELECT THE NUMBER OF PLAYERS:", name_input: "Enter the name of:", placeholder: "Player", score_input: "Enter score for:", score_submit: "Add", step_back: "Back", elimination_message: "Unfortunately, is out and eliminated from the game!", winner_message: "Congratulations! has won the game!", score_halving_message: "Well done! Goes back to points", new_game_button: "New game", new_game_text: "Do you want to start a new game with the same players?", new_game_confirm: "Yes", new_game_cancel: "No" }, french: { name: "Français", flag: "https://flagcdn.com/h40/fr.png", title: "TABLEAU DE SCORE", player_count: "SÉLECTIONNEZ LE NOMBRE DE JOUEURS:", name_input: "Entrez le nom de:", placeholder: "Joueur", score_input: "Entrez le score pour :", score_submit: "Ajouter", step_back: "Retour", elimination_message: "Désolé, est éliminé et hors du jeu!", winner_message: "Félicitations ! a gagné le jeu !", score_halving_message: "Bien joué ! Retourne aux points", new_game_button: "Nouveau jeu", new_game_text: "Voulez-vous commencer une nouvelle partie avec les mêmes joueurs ?", new_game_confirm: "Oui", new_game_cancel: "Non" } }; let i = a.dutch; function s() { return i } function r(e) { i = e } function l(e, t) { t.innerText = e } const c = document.createElement("template"); c.innerHTML = `\n    <style>\n        ${o.A}\n    </style>\n    <button class="back-button"></button> \n`; class d extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(c.content.cloneNode(!0)), this.backButton = this.shadowRoot.querySelector(".back-button"); const e = s(); this.backButton.textContent = e.step_back, this.backButton.addEventListener("click", (() => this.handleBackButtonClick())), document.addEventListener("language-changed", (e => this.handleLanguageChange(e))) } enableButton() { this.backButton.classList.remove("disabled") } disableButton() { this.backButton.classList.add("disabled") } handleLanguageChange(e) { l(e.detail.step_back, this.backButton) } handleBackButtonClick() { const e = new CustomEvent("back-button-clicked", { detail: { message: "Step back required" }, bubbles: !0, composed: !0 }); this.dispatchEvent(e) } } customElements.define("dt-back-button", d); var u = n(785); const h = async (e, t, n) => fetch(e).then((e => { if (!e.ok) throw console.log("error getting imgae"), new Error(`HTTP error! Status: ${e.status}`); return e.blob() })).then((e => { const o = URL.createObjectURL(e), a = document.createElement("img"); a.src = o, a.alt = "", a.classList.add(n), t.appendChild(a) })).catch((e => { console.error("Error fetching the image:", e) })), p = document.createElement("template"); p.innerHTML = `\n    <style>\n        ${u.A}\n    </style>\n    <button class="open-button"></button> <div class="dropdown-container" id="language-selector"> <ul class="dropdown-menu"> <li class="close-button-container"> <button class="close-button"> <svg class="close-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" width="35" height="35"> \x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e <path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/> </svg> </button> </li> </ul> </div> \n`; class m extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(p.content.cloneNode(!0)), this.dropdownContainer = this.shadowRoot.querySelector(".dropdown-container"), this.dropdownMenu = this.shadowRoot.querySelector(".dropdown-menu"), this.openButton = this.shadowRoot.querySelector(".open-button"), this.closeButton = this.shadowRoot.querySelector(".close-button"), this.renderDefaultLanguageButton(), this.renderLanguageButtons(), this.openButton.addEventListener("click", (e => this.openDropdown())), this.dropdownMenu.addEventListener("click", (e => this.setNewLanguage(e))), this.closeButton.addEventListener("click", (() => { this.closeDropdown() })) } openDropdown() { this.dropdownMenu.classList.add("show") } closeDropdown() { this.dropdownMenu.classList.remove("show") } renderLanguageButtons() { Object.keys(a).forEach((e => { const t = a[e], n = document.createElement("li"), o = document.createElement("button"), i = document.createElement("span"); n.classList.add("language-option"), o.classList.add("language-button", `${t.name}`), h(t.flag, o, "language-flag"), i.classList.add("language-name"), i.innerText = t.name, o.appendChild(i), n.appendChild(o), this.dropdownMenu.appendChild(n) })) } renderDefaultLanguageButton() { const e = s(); h(e.flag, this.openButton, "language-flag") } setNewLanguage(e) { const t = e.target.closest(".language-button"); if (null === t) return; const n = Object.values(a).find((e => e.name.toLowerCase() === t.classList[1].toLowerCase())); if (n === s()) return void this.closeDropdown(); r(n); const o = s(), i = new CustomEvent("language-changed", { detail: o, bubbles: !0, composed: !0 }); document.dispatchEvent(i), this.openButton.innerHTML = "", h(o.flag, this.openButton, "language-flag"), this.closeDropdown() } } customElements.define("dt-language-selector", m); var g = n(153); const f = {}, b = document.createElement("template"); b.innerHTML = `\n    <style>\n        ${g.A}\n    </style>\n    <div class="card-slider"> <h2 class="card-title">SELECTER HET AANTAL SPELERS:</h2> <div class="cards"></div> <div class="button-container"> <button class="previous-button"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512" height="30px" width="30px"> \x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e <path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"/> </svg> </button> <div class="indicator-container"> <div class="indicator indicator-1"></div> <div class="indicator indicator-2"></div> <div class="indicator indicator-3"></div> <div class="indicator indicator-4"></div> </div> <button class="next-button"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512" height="30px" width="30px"> \x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e <path d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"/> </svg> </button> </div> </div> \n`; class w extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(b.content.cloneNode(!0)), this.cardsUrls = ["assets/card_pink_2.png", "assets/card_blue_3.png", "assets/card_yellow_4.jpg", "assets/card_pink_5.png", "assets/card_green_6.png"], this.cards = this.shadowRoot.querySelector(".cards"), this.nextButton = this.shadowRoot.querySelector(".next-button"), this.previousButton = this.shadowRoot.querySelector(".previous-button"), this.indicatorContainer = this.shadowRoot.querySelector(".indicator-container"), this.cardTitle = this.shadowRoot.querySelector(".card-title"), this.renderCards(); const e = this.cards.querySelector(".card-button:first-child"), t = this.cards.querySelector(".card-button:last-child"); l(s().player_count, this.cardTitle), this.toggleNavButtons(t, this.nextButton), this.toggleNavButtons(e, this.previousButton), this.updateActiveIndicator(), document.addEventListener("language-changed", (e => { l(e.detail.player_count, this.cardTitle) })), this.nextButton.addEventListener("click", (e => this.scrollCards(e))), this.previousButton.addEventListener("click", (e => this.scrollCards(e))), this.cards.addEventListener("click", (e => { this.handlePlayerCountSelection(e) })) } handlePlayerCountSelection(e) { !function () { for (let e in f) f.hasOwnProperty(e) && delete f[e] }(); const t = e.target.closest(".card-button"); if (null === t) return; const n = t.id; !function (e) { for (let t = 1; t <= e; t++)f[`player_${t}`] = { player_index: t - 1, name: null, score_per_round: [], get total_score() { return this.score_per_round.reduce(((e, t) => e + t), 0) }, isEliminated: !1, eliminatedRound: null } }(Number(n[n.length - 1])), this.shadowRoot.querySelector(".card-slider").classList.add("slide-out"), setTimeout((() => { const e = document.createElement("dt-player-name-input"); null === document.querySelector("main").querySelector("dt-player-name-input") && document.querySelector("main").appendChild(e), this.remove() }), 500) } renderCards() { this.cardsUrls.forEach(((e, t) => { const n = document.createElement("button"); n.classList.add("card-button"), n.id = `card-${t + 2}`, h(e, n, "card"), this.cards.appendChild(n) })) } scrollCards(e) { const t = e.target.closest("button"), n = this.cards.scrollWidth / this.cards.children.length, o = this.cards.scrollLeft; let a; t === this.nextButton && (a = o + n), t === this.previousButton && (a = o - n), this.cards.scrollTo({ left: a, behavior: "smooth" }) } toggleNavButtons(e, t) { new IntersectionObserver((n => { n.forEach((n => { n.target === e && n.isIntersecting ? t.classList.add("hidden") : t.classList.remove("hidden") })) }), { root: this.cards, rootMargin: "0px", threshold: .9 }).observe(e) } updateActiveIndicator() { const e = this.cards.querySelectorAll(".card-button"), t = new Set, n = new IntersectionObserver((n => { n.forEach((e => { e.isIntersecting ? t.add(e.target) : t.delete(e.target) })); const o = this.indicatorContainer.querySelectorAll(".indicator"), a = Array.from(e); this.setActiveIndicator(a, o, t.size, t) }), { root: this.cards, rootMargin: "0px", threshold: .9 }); e.forEach((e => { n.observe(e) })) } setActiveIndicator(e, t, n, o) { const a = []; switch (t.forEach((e => { e.classList.remove("active") })), n) { case 2: e.forEach(((t, n) => { const o = [e[n], e[n + 1]]; o.includes(void 0) || a.push(o) })); break; case 3: e.forEach(((t, n) => { const o = [e[n], e[n + 1], e[n + 2]]; o.includes(void 0) || a.push(o) })); break; case 4: e.forEach(((t, n) => { const o = [e[n], e[n + 1], e[n + 2], e[n + 3]]; o.includes(void 0) || a.push(o) })) }if (0 === a.length) return; const i = new Set(o); t[a.findIndex((e => { const t = new Set(e); return [...i].every((e => t.has(e))) && [...t].every((e => i.has(e))) }))].classList.add("active") } } customElements.define("dt-player-count-picker", w); var x = n(41); const y = document.createElement("template"); y.innerHTML = `\n    <style>\n        ${x.A}\n    </style>\n    <div class="name-input-container"> <h2 class="name-input-title">Voer de naam in van:</h2> <div class="input-wrapper"> <svg class="warning-icon hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"> \x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e <path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"/> </svg> <input type="text" class="name-input" placeholder="Speler"/> <div class="button-container"> <dt-back-button></dt-back-button> <button class="name-input-confirm">Voeg toe</button> </div> </div> </div> \n`; class v extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(y.content.cloneNode(!0)), this.inputContainer = this.shadowRoot.querySelector(".name-input-container"), this.input = this.shadowRoot.querySelector(".name-input"), this.inputTitle = this.shadowRoot.querySelector(".name-input-title"), this.submitButton = this.shadowRoot.querySelector(".name-input-confirm"), this.warningIcon = this.shadowRoot.querySelector(".warning-icon"); const e = s(); l(e.score_submit, this.submitButton), l(e.name_input, this.inputTitle), this.input.placeholder = e.placeholder, this.playerCount = 0, this.startNameInput(), setTimeout((() => { this.input.focus() }), 200), this.input.addEventListener("input", (() => this.resetWarning())), this.input.addEventListener("keydown", (e => { "Enter" === e.key && this.submitButton.click(), this.input.focus() })), this.submitButton.addEventListener("click", (() => this.handleNameInput())), this.addEventListener("back-button-clicked", (e => this.handleBackButtonClick(e))), document.addEventListener("language-changed", (e => { l(e.detail.score_submit, this.submitButton), l(e.detail.name_input, this.inputTitle), this.input.placeholder = e.detail.placeholder, this.setPlaceholder() })) } handleBackButtonClick(e) { if (null === document.querySelector("dt-player-count-picker")) { const e = document.createElement("dt-player-count-picker"); document.querySelector("main").appendChild(e) } this.remove() } resetWarning() { this.input.classList.remove("warning"), this.warningIcon.classList.add("hidden") } startNameInput() { this.playerCount = 1, this.setPlaceholder() } handleNameInput() { let e = this.input.value.trim(); return "" === e ? (this.input.classList.add("warning"), void this.warningIcon.classList.remove("hidden")) : e.length > 22 ? (this.input.classList.add("warning"), this.warningIcon.classList.remove("hidden"), void (this.input.value = "")) : (e = this.input.value.split(" ").map((e => e.charAt(0).toUpperCase() + e.slice(1).toLowerCase())).join(" "), f[`player_${this.playerCount}`].name = e, this.playerCount++, this.playerCount <= Object.keys(f).length ? (this.input.value = "", this.input.placeholder = this.input.placeholder.slice(0, -2), this.setPlaceholder()) : (this.inputContainer.classList.add("slide-out"), setTimeout((() => { const e = document.createElement("dt-score-management"); null === document.querySelector("main").querySelector("dt-score-management") && document.querySelector("main").appendChild(e), this.remove() }), 500)), void this.input.focus()) } setPlaceholder() { this.input.placeholder = `${this.input.placeholder} ${this.playerCount}` } } customElements.define("dt-player-name-input", v); var _ = n(421), E = {}; !function e(t, n, o, a) { var i = !!(t.Worker && t.Blob && t.Promise && t.OffscreenCanvas && t.OffscreenCanvasRenderingContext2D && t.HTMLCanvasElement && t.HTMLCanvasElement.prototype.transferControlToOffscreen && t.URL && t.URL.createObjectURL), s = "function" == typeof Path2D && "function" == typeof DOMMatrix, r = function () { if (!t.OffscreenCanvas) return !1; var e = new OffscreenCanvas(1, 1), n = e.getContext("2d"); n.fillRect(0, 0, 1, 1); var o = e.transferToImageBitmap(); try { n.createPattern(o, "no-repeat") } catch (e) { return !1 } return !0 }(); function l() { } function c(e) { var o = n.exports.Promise, a = void 0 !== o ? o : t.Promise; return "function" == typeof a ? new a(e) : (e(l, l), null) } var d, u, h, p, m, g, f, b, w, x, y, v = (d = r, u = new Map, { transform: function (e) { if (d) return e; if (u.has(e)) return u.get(e); var t = new OffscreenCanvas(e.width, e.height); return t.getContext("2d").drawImage(e, 0, 0), u.set(e, t), t }, clear: function () { u.clear() } }), _ = (m = Math.floor(1e3 / 60), g = {}, f = 0, "function" == typeof requestAnimationFrame && "function" == typeof cancelAnimationFrame ? (h = function (e) { var t = Math.random(); return g[t] = requestAnimationFrame((function n(o) { f === o || f + m - 1 < o ? (f = o, delete g[t], e()) : g[t] = requestAnimationFrame(n) })), t }, p = function (e) { g[e] && cancelAnimationFrame(g[e]) }) : (h = function (e) { return setTimeout(e, m) }, p = function (e) { return clearTimeout(e) }), { frame: h, cancel: p }), E = (x = {}, function () { if (b) return b; if (!o && i) { var t = ["var CONFETTI, SIZE = {}, module = {};", "(" + e.toString() + ")(this, module, true, SIZE);", "onmessage = function(msg) {", "  if (msg.data.options) {", "    CONFETTI(msg.data.options).then(function () {", "      if (msg.data.callback) {", "        postMessage({ callback: msg.data.callback });", "      }", "    });", "  } else if (msg.data.reset) {", "    CONFETTI && CONFETTI.reset();", "  } else if (msg.data.resize) {", "    SIZE.width = msg.data.resize.width;", "    SIZE.height = msg.data.resize.height;", "  } else if (msg.data.canvas) {", "    SIZE.width = msg.data.canvas.width;", "    SIZE.height = msg.data.canvas.height;", "    CONFETTI = module.exports.create(msg.data.canvas);", "  }", "}"].join("\n"); try { b = new Worker(URL.createObjectURL(new Blob([t]))) } catch (e) { return void 0 !== typeof console && "function" == typeof console.warn && console.warn("🎊 Could not load worker", e), null } !function (e) { function t(t, n) { e.postMessage({ options: t || {}, callback: n }) } e.init = function (t) { var n = t.transferControlToOffscreen(); e.postMessage({ canvas: n }, [n]) }, e.fire = function (n, o, a) { if (w) return t(n, null), w; var i = Math.random().toString(36).slice(2); return w = c((function (o) { function s(t) { t.data.callback === i && (delete x[i], e.removeEventListener("message", s), w = null, v.clear(), a(), o()) } e.addEventListener("message", s), t(n, i), x[i] = s.bind(null, { data: { callback: i } }) })) }, e.reset = function () { for (var t in e.postMessage({ reset: !0 }), x) x[t](), delete x[t] } }(b) } return b }), k = { particleCount: 50, angle: 90, spread: 45, startVelocity: 45, decay: .9, gravity: 1, drift: 0, ticks: 200, x: .5, y: .5, shapes: ["square", "circle"], zIndex: 100, colors: ["#26ccff", "#a25afd", "#ff5e7e", "#88ff5a", "#fcff42", "#ffa62d", "#ff36ff"], disableForReducedMotion: !1, scalar: 1 }; function S(e, t, n) { return function (e, t) { return t ? t(e) : e }(e && null != e[t] ? e[t] : k[t], n) } function L(e) { return e < 0 ? 0 : Math.floor(e) } function M(e) { return parseInt(e, 16) } function C(e) { return e.map(B) } function B(e) { var t = String(e).replace(/[^0-9a-f]/gi, ""); return t.length < 6 && (t = t[0] + t[0] + t[1] + t[1] + t[2] + t[2]), { r: M(t.substring(0, 2)), g: M(t.substring(2, 4)), b: M(t.substring(4, 6)) } } function R(e) { e.width = document.documentElement.clientWidth, e.height = document.documentElement.clientHeight } function D(e) { var t = e.getBoundingClientRect(); e.width = t.width, e.height = t.height } function T(e, n) { var r, l = !e, d = !!S(n || {}, "resize"), u = !1, h = S(n, "disableForReducedMotion", Boolean), p = i && S(n || {}, "useWorker") ? E() : null, m = l ? R : D, g = !(!e || !p || !e.__confetti_initialized), f = "function" == typeof matchMedia && matchMedia("(prefers-reduced-motion)").matches; function b(t, n, i) { for (var l, d, u, h, p = S(t, "particleCount", L), g = S(t, "angle", Number), f = S(t, "spread", Number), b = S(t, "startVelocity", Number), w = S(t, "decay", Number), x = S(t, "gravity", Number), y = S(t, "drift", Number), E = S(t, "colors", C), k = S(t, "ticks", Number), M = S(t, "shapes"), B = S(t, "scalar"), R = !!S(t, "flat"), D = function (e) { var t = S(e, "origin", Object); return t.x = S(t, "x", Number), t.y = S(t, "y", Number), t }(t), T = p, P = [], I = e.width * D.x, N = e.height * D.y; T--;)P.push((void 0, void 0, d = (l = { x: I, y: N, angle: g, spread: f, startVelocity: b, color: E[T % E.length], shape: M[(h = M.length, Math.floor(Math.random() * (h - 0)) + 0)], ticks: k, decay: w, gravity: x, drift: y, scalar: B, flat: R }).angle * (Math.PI / 180), u = l.spread * (Math.PI / 180), { x: l.x, y: l.y, wobble: 10 * Math.random(), wobbleSpeed: Math.min(.11, .1 * Math.random() + .05), velocity: .5 * l.startVelocity + Math.random() * l.startVelocity, angle2D: -d + (.5 * u - Math.random() * u), tiltAngle: (.5 * Math.random() + .25) * Math.PI, color: l.color, shape: l.shape, tick: 0, totalTicks: l.ticks, decay: l.decay, drift: l.drift, random: Math.random() + 2, tiltSin: 0, tiltCos: 0, wobbleX: 0, wobbleY: 0, gravity: 3 * l.gravity, ovalScalar: .6, scalar: l.scalar, flat: l.flat })); return r ? r.addFettis(P) : (r = function (e, t, n, i, r) { var l, d, u = t.slice(), h = e.getContext("2d"), p = c((function (t) { function c() { l = d = null, h.clearRect(0, 0, i.width, i.height), v.clear(), r(), t() } l = _.frame((function t() { !o || i.width === a.width && i.height === a.height || (i.width = e.width = a.width, i.height = e.height = a.height), i.width || i.height || (n(e), i.width = e.width, i.height = e.height), h.clearRect(0, 0, i.width, i.height), (u = u.filter((function (e) { return function (e, t) { t.x += Math.cos(t.angle2D) * t.velocity + t.drift, t.y += Math.sin(t.angle2D) * t.velocity + t.gravity, t.velocity *= t.decay, t.flat ? (t.wobble = 0, t.wobbleX = t.x + 10 * t.scalar, t.wobbleY = t.y + 10 * t.scalar, t.tiltSin = 0, t.tiltCos = 0, t.random = 1) : (t.wobble += t.wobbleSpeed, t.wobbleX = t.x + 10 * t.scalar * Math.cos(t.wobble), t.wobbleY = t.y + 10 * t.scalar * Math.sin(t.wobble), t.tiltAngle += .1, t.tiltSin = Math.sin(t.tiltAngle), t.tiltCos = Math.cos(t.tiltAngle), t.random = Math.random() + 2); var n = t.tick++ / t.totalTicks, o = t.x + t.random * t.tiltCos, a = t.y + t.random * t.tiltSin, i = t.wobbleX + t.random * t.tiltCos, r = t.wobbleY + t.random * t.tiltSin; if (e.fillStyle = "rgba(" + t.color.r + ", " + t.color.g + ", " + t.color.b + ", " + (1 - n) + ")", e.beginPath(), s && "path" === t.shape.type && "string" == typeof t.shape.path && Array.isArray(t.shape.matrix)) e.fill(function (e, t, n, o, a, i, s) { var r = new Path2D(e), l = new Path2D; l.addPath(r, new DOMMatrix(t)); var c = new Path2D; return c.addPath(l, new DOMMatrix([Math.cos(s) * a, Math.sin(s) * a, -Math.sin(s) * i, Math.cos(s) * i, n, o])), c }(t.shape.path, t.shape.matrix, t.x, t.y, .1 * Math.abs(i - o), .1 * Math.abs(r - a), Math.PI / 10 * t.wobble)); else if ("bitmap" === t.shape.type) { var l = Math.PI / 10 * t.wobble, c = .1 * Math.abs(i - o), d = .1 * Math.abs(r - a), u = t.shape.bitmap.width * t.scalar, h = t.shape.bitmap.height * t.scalar, p = new DOMMatrix([Math.cos(l) * c, Math.sin(l) * c, -Math.sin(l) * d, Math.cos(l) * d, t.x, t.y]); p.multiplySelf(new DOMMatrix(t.shape.matrix)); var m = e.createPattern(v.transform(t.shape.bitmap), "no-repeat"); m.setTransform(p), e.globalAlpha = 1 - n, e.fillStyle = m, e.fillRect(t.x - u / 2, t.y - h / 2, u, h), e.globalAlpha = 1 } else if ("circle" === t.shape) e.ellipse ? e.ellipse(t.x, t.y, Math.abs(i - o) * t.ovalScalar, Math.abs(r - a) * t.ovalScalar, Math.PI / 10 * t.wobble, 0, 2 * Math.PI) : function (e, t, n, o, a, i, s, r) { e.save(), e.translate(t, n), e.rotate(i), e.scale(o, a), e.arc(0, 0, 1, 0, r, void 0), e.restore() }(e, t.x, t.y, Math.abs(i - o) * t.ovalScalar, Math.abs(r - a) * t.ovalScalar, Math.PI / 10 * t.wobble, 0, 2 * Math.PI); else if ("star" === t.shape) for (var g = Math.PI / 2 * 3, f = 4 * t.scalar, b = 8 * t.scalar, w = t.x, x = t.y, y = 5, _ = Math.PI / y; y--;)w = t.x + Math.cos(g) * b, x = t.y + Math.sin(g) * b, e.lineTo(w, x), g += _, w = t.x + Math.cos(g) * f, x = t.y + Math.sin(g) * f, e.lineTo(w, x), g += _; else e.moveTo(Math.floor(t.x), Math.floor(t.y)), e.lineTo(Math.floor(t.wobbleX), Math.floor(a)), e.lineTo(Math.floor(i), Math.floor(r)), e.lineTo(Math.floor(o), Math.floor(t.wobbleY)); return e.closePath(), e.fill(), t.tick < t.totalTicks }(h, e) }))).length ? l = _.frame(t) : c() })), d = c })); return { addFettis: function (e) { return u = u.concat(e), p }, canvas: e, promise: p, reset: function () { l && _.cancel(l), d && d() } } }(e, P, m, n, i), r.promise) } function w(n) { var o = h || S(n, "disableForReducedMotion", Boolean), a = S(n, "zIndex", Number); if (o && f) return c((function (e) { e() })); l && r ? e = r.canvas : l && !e && (e = function (e) { var t = document.createElement("canvas"); return t.style.position = "fixed", t.style.top = "0px", t.style.left = "0px", t.style.pointerEvents = "none", t.style.zIndex = e, t }(a), document.body.appendChild(e)), d && !g && m(e); var i = { width: e.width, height: e.height }; function s() { if (p) { var t = { getBoundingClientRect: function () { if (!l) return e.getBoundingClientRect() } }; return m(t), void p.postMessage({ resize: { width: t.width, height: t.height } }) } i.width = i.height = null } function w() { r = null, d && (u = !1, t.removeEventListener("resize", s)), l && e && (document.body.contains(e) && document.body.removeChild(e), e = null, g = !1) } return p && !g && p.init(e), g = !0, p && (e.__confetti_initialized = !0), d && !u && (u = !0, t.addEventListener("resize", s, !1)), p ? p.fire(n, i, w) : b(n, i, w) } return w.reset = function () { p && p.reset(), r && r.reset() }, w } function P() { return y || (y = T(null, { useWorker: !0, resize: !0 })), y } n.exports = function () { return P().apply(this, arguments) }, n.exports.reset = function () { P().reset() }, n.exports.create = T, n.exports.shapeFromPath = function (e) { if (!s) throw new Error("path confetti are not supported in this browser"); var t, n; "string" == typeof e ? t = e : (t = e.path, n = e.matrix); var o = new Path2D(t), a = document.createElement("canvas").getContext("2d"); if (!n) { for (var i, r, l = 1e3, c = l, d = l, u = 0, h = 0, p = 0; p < l; p += 2)for (var m = 0; m < l; m += 2)a.isPointInPath(o, p, m, "nonzero") && (c = Math.min(c, p), d = Math.min(d, m), u = Math.max(u, p), h = Math.max(h, m)); i = u - c, r = h - d; var g = Math.min(10 / i, 10 / r); n = [g, 0, 0, g, -Math.round(i / 2 + c) * g, -Math.round(r / 2 + d) * g] } return { type: "path", path: t, matrix: n } }, n.exports.shapeFromText = function (e) { var t, n = 1, o = "#000000", a = '"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji", "EmojiOne Color", "Android Emoji", "Twemoji Mozilla", "system emoji", sans-serif'; "string" == typeof e ? t = e : (t = e.text, n = "scalar" in e ? e.scalar : n, a = "fontFamily" in e ? e.fontFamily : a, o = "color" in e ? e.color : o); var i = 10 * n, s = i + "px " + a, r = new OffscreenCanvas(i, i), l = r.getContext("2d"); l.font = s; var c = l.measureText(t), d = Math.ceil(c.actualBoundingBoxRight + c.actualBoundingBoxLeft), u = Math.ceil(c.actualBoundingBoxAscent + c.actualBoundingBoxDescent), h = c.actualBoundingBoxLeft + 2, p = c.actualBoundingBoxAscent + 2; d += 4, u += 4, (l = (r = new OffscreenCanvas(d, u)).getContext("2d")).font = s, l.fillStyle = o, l.fillText(t, h, p); var m = 1 / n; return { type: "bitmap", bitmap: r.transferToImageBitmap(), matrix: [m, 0, 0, m, -d * m / 2, -u * m / 2] } } }(function () { return "undefined" != typeof window ? window : "undefined" != typeof self ? self : this || {} }(), E, !1); const k = E.exports; E.exports.create; const S = document.createElement("template"); S.innerHTML = `\n    <style>\n        ${_.A}\n    </style>\n    <div class="score-display-wrapper"> <div class="players-wrapper"></div> <div class="score-input-container"> <h2 class="score-input-title">Voer score in:</h2> <div class="input-wrapper"> <svg class="warning-icon hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"> \x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e <path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"/> </svg> <input type="number" class="score-input" required min="0" inputmode="numeric"/> </div> <div class="button-container"> <dt-back-button></dt-back-button> <button class="new-game-button">nieuw spel</button> <button class="add-button">voeg toe</button> </div> </div> <dialog class="message-dialog"> <div class="message-dialog-text"></div> <button class="message-dialog-button">OK</button> </dialog> <dialog class="new-game-dialog"> <button class="new-game-dialog-close-button"> <svg class="close-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" width="35" height="35"> \x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e <path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/> </svg> </button> <div class="new-game-dialog-text"></div> <div class="new-game-dialog-button-container"> <button class="new-game-dialog-no-button"></button> <button class="new-game-dialog-yes-button"></button> </div> </dialog> </div> \n`; class L extends HTMLElement { constructor() { super(), this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(S.content.cloneNode(!0)), this.mainWrapper = this.shadowRoot.querySelector(".score-display-wrapper"), this.scoreInput = this.shadowRoot.querySelector(".score-input"), this.playersWrapper = this.shadowRoot.querySelector(".players-wrapper"), this.inputTitle = this.shadowRoot.querySelector(".score-input-title"), this.scoreSubmitButton = this.shadowRoot.querySelector(".add-button"), this.backButton = this.shadowRoot.querySelector("dt-back-button"), this.newGameButton = this.shadowRoot.querySelector(".new-game-button"), this.messageDialog = this.shadowRoot.querySelector(".message-dialog"), this.newGameDialog = this.shadowRoot.querySelector(".new-game-dialog"), this.warningIcon = this.shadowRoot.querySelector(".warning-icon"); const e = s(); l(e.score_input, this.inputTitle), l(e.score_submit, this.scoreSubmitButton), l(e.new_game_button, this.newGameButton), this.appendPlayerData(), this.totalPlayers = this.shadowRoot.querySelectorAll(".name").length, this.names = this.shadowRoot.querySelectorAll(".name"), this.scores = this.shadowRoot.querySelectorAll(".score"), this.currentRound = 1, this.playerNumber = 1, this.eliminatedPlayerNumbers = [], this.gameOver = !1, this.activePlayerData = f[`player_${this.playerNumber}`], this.setPlaceholder(), setTimeout((() => { this.backButton.disableButton(), this.scoreInput.focus() }), 200), this.scoreInput.addEventListener("input", (() => { this.removeWarning() })), this.scoreInput.addEventListener("keydown", (e => { "Enter" !== e.key || this.gameOver || (e.preventDefault(), this.scoreSubmitButton.click(), this.scoreInput.focus()) })), this.backButton.addEventListener("click", (e => this.undoScore())), this.scoreSubmitButton.addEventListener("click", (() => this.submitScore())), this.newGameButton.addEventListener("click", (() => this.handleNewGameClick())), document.addEventListener("language-changed", (e => this.handleLanguageChange(e))) } handleNewGameClick() { this.newGameDialog.querySelector(".new-game-dialog-close-button").addEventListener("click", (() => { this.newGameDialog.close(), this.newGameDialog.classList.remove("new-game-dialog-open") })); const e = this.newGameDialog.querySelector(".new-game-dialog-text"), t = this.newGameDialog.querySelector(".new-game-dialog-no-button"), n = this.newGameDialog.querySelector(".new-game-dialog-yes-button"), o = s().new_game_text, a = s().new_game_confirm, i = s().new_game_cancel; t.innerText = i, n.innerText = a, e.innerText = o, this.newGameDialog.showModal(), this.newGameDialog.classList.add("new-game-dialog-open"), t.addEventListener("click", (() => { this.newGame() })), n.addEventListener("click", (() => { this.newGameSamePlayers() })) } newGameSamePlayers() { const e = this.shadowRoot.querySelector(".score-display-wrapper"); e.classList.add("slide-out"), this.newGameDialog.close(), this.newGameDialog.classList.remove("new-game-dialog-open"), setTimeout((() => { e.classList.remove("slide-out") }), 500), e.classList.add("slide-in"), this.resetGameState(), this.scores.forEach((e => { e.innerText = 0, e.classList.remove("eliminated") })), this.names.forEach((e => { e.classList.remove("eliminated") })), this.backButton.disableButton(), this.scoreSubmitButton.classList.remove("disabled"), this.setPlaceholder() } newGame() { this.newGameDialog.close(), this.shadowRoot.querySelector(".score-display-wrapper").classList.add("slide-out"), setTimeout((() => { this.remove(); const e = document.createElement("dt-player-count-picker"); null === document.querySelector("main").querySelector("dt-player-count-picker") && document.querySelector("main").appendChild(e) }), 500) } resetGameState() { this.currentRound = 1, this.playerNumber = 1, this.eliminatedPlayerNumbers = [], this.gameOver = !1, this.activePlayerData = f[`player_${this.playerNumber}`]; for (const e in f) { const t = f[e]; t.score_per_round = [], t.isEliminated = !1, t.eliminatedRound = null } } undoScore() { if (this.gameOver && (this.gameOver = !1, this.scoreSubmitButton.classList.remove("disabled")), 1 !== this.playerNumber || 1 !== this.currentRound) { do { this.playerNumber--, this.playerNumber < 1 && (this.playerNumber = this.totalPlayers, this.currentRound--); const e = f[`player_${this.playerNumber}`]; if (e.isEliminated && e.eliminatedRound === this.currentRound) { this.undoElimination(e); break } } while (f[`player_${this.playerNumber}`].isEliminated); this.activePlayerData = f[`player_${this.playerNumber}`], this.activePlayerData.score_per_round.pop(), this.displayScore(), this.setPlaceholder(), 1 !== this.playerNumber || 1 !== this.currentRound ? this.scoreSubmitButton.classList.remove("disabled") : this.backButton.disableButton() } else this.backButton.disableButton() } undoElimination(e) { const t = this.scores[e.player_index], n = this.names[e.player_index]; t.classList.remove("eliminated"), n.classList.remove("eliminated"), e.isEliminated = !1, e.eliminatedRound = null } eliminatePlayer() { const e = this.scores[this.activePlayerData.player_index], t = this.names[this.activePlayerData.player_index]; e.classList.add("eliminated"), t.classList.add("eliminated"), this.activePlayerData.isEliminated = !0, this.activePlayerData.eliminatedRound = this.currentRound, this.alertEliminationOrWin(), this.gameOver && this.scoreSubmitButton.classList.add("disabled") } alertEliminationOrWin() { const e = Object.values(f).filter((e => !e.isEliminated)), t = this.activePlayerData.name, n = this.messageDialog.querySelector(".message-dialog-text"); if (e.length > 1) { const e = s().elimination_message, o = e.indexOf(",") + 1, a = `${e.slice(0, o)}\n ${t} ${e.slice(o)}`; n.innerText = a } else { const t = e[0].name, o = s().winner_message, a = o.indexOf("!") + 1, i = `${o.slice(0, a)}\n ${t} ${o.slice(a)}`; n.innerText = i, this.gameOver = !0 } this.messageDialog.querySelector(".message-dialog-button").addEventListener("click", (() => { const e = this.shadowRoot.querySelector("canvas"); e && e.remove(), this.messageDialog.classList.remove("message-dialog-open"), this.messageDialog.close() })), this.messageDialog.showModal(), this.messageDialog.classList.add("message-dialog-open"), this.gameOver && this.runConfettiAnimation() } runConfettiAnimation() { const e = document.createElement("canvas"); this.messageDialog.appendChild(e), k.create(e, { resize: !0, useWorker: !0 })({ particleCount: 500, spread: 60, origin: { x: .5, y: .5 }, colors: ["#FF0000", "#00FF00", "#0000FF", "#FFFF00", "#FF00FF", "#00FFFF", "#FFA500", "#FF69B4"] }) } alertScoreHalving() { const e = this.messageDialog.querySelector(".message-dialog-text"), t = this.activePlayerData.total_score, n = this.activePlayerData.name, o = s().score_halving_message, a = o.indexOf("!") + 1, i = o.lastIndexOf(" "), r = `${o.slice(0, a)}\n ${n} ${o.slice(a, i)} ${t} ${o.slice(i)}`; e.innerText = r, this.messageDialog.querySelector(".message-dialog-button").addEventListener("click", (() => { this.messageDialog.classList.remove("message-dialog-open"), this.messageDialog.close() })), this.messageDialog.showModal(), this.messageDialog.classList.add("message-dialog-open") } submitScore() { if (!this.scoreInput.validity.valid) return void this.addWarning(); this.backButton.enableButton(); const e = Number(this.scoreInput.value); if (this.activePlayerData.score_per_round.push(e), this.activePlayerData.total_score > 150 && this.eliminatePlayer(), [100, 150].includes(this.activePlayerData.total_score)) { const e = this.activePlayerData.total_score, t = e / 2 - (e - this.activePlayerData.score_per_round.pop()); this.activePlayerData.score_per_round.push(t), this.alertScoreHalving() } this.displayScore(); do { this.playerNumber++, this.playerNumber > this.totalPlayers && (this.playerNumber = 1, this.currentRound++) } while (f[`player_${this.playerNumber}`].isEliminated); this.activePlayerData = f[`player_${this.playerNumber}`], this.setPlaceholder() } displayScore() { this.scores[this.activePlayerData.player_index].innerText = this.activePlayerData.total_score } setPlaceholder() { this.scoreInput.placeholder = this.activePlayerData.name, this.scoreInput.value = "" } addWarning() { this.scoreInput.classList.add("warning"), this.warningIcon.classList.remove("hidden"), this.scoreInput.focus() } removeWarning() { this.scoreInput.classList.remove("warning"), this.warningIcon.classList.add("hidden") } handleLanguageChange(e) { l(e.detail.score_input, this.inputTitle), l(e.detail.score_submit, this.scoreSubmitButton), l(e.detail.new_game_button, this.newGameButton) } appendPlayerData() { for (const e in f) { const t = f[e].name, n = f[e].total_score, o = document.createElement("div"), a = document.createElement("div"), i = document.createElement("div"); o.classList.add("player-container"), a.classList.add("name"), i.classList.add("score"), a.textContent = t, i.textContent = n, o.appendChild(a), o.appendChild(i), this.playersWrapper.appendChild(o) } } } customElements.define("dt-score-management", L), h("assets/onder_de_10_logo.png", document.querySelector(".logo-link"), "logo-footer"), document.addEventListener("language-changed", (e => { l(e.detail.title, document.querySelector(".header-title")) })) })();
